name: Micropython CI

on:
  push:
  pull_request:

jobs:
  build:
    if: ${{ github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name }}
    name: Build ${{ matrix.port }} port
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        port: ['unix', 'esp32', 'stm32', 'rp2']
    steps:
    - uses: actions/checkout@v4
    - uses: ammaraskar/gcc-problem-matcher@master
    - name: Install Dependencies
      run: |
        sudo add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu `lsb_release -sc` main universe restricted multiverse"
        sudo apt-get update -y -qq
        sudo apt-get install --force-yes -y build-essential libffi-dev pkg-config cmake ninja-build gnome-desktop-testing libasound2-dev libpulse-dev libaudio-dev libjack-dev libsndio-dev libx11-dev libxext-dev libxrandr-dev libxcursor-dev libxfixes-dev libxi-dev libxss-dev libxkbcommon-dev libdrm-dev libgbm-dev libgl1-mesa-dev libgles2-mesa-dev libegl1-mesa-dev libdbus-1-dev libibus-1.0-dev libudev-dev fcitx-libs-dev libpipewire-0.3-dev libwayland-dev libdecor-0-dev

    # STM32 & RPi Pico port
    - name: arm-none-eabi-gcc
      if: matrix.port == 'stm32' || matrix.port == 'rp2'
      uses: carlosperate/arm-none-eabi-gcc-action@v1.8.1
      with:
        release: '9-2019-q4' # The arm-none-eabi-gcc release to use.
    - name: Build STM32 port
      if: matrix.port == 'stm32'
      run: python3 make.py stm32 submodules clean mpy_cross BOARD=STM32F7DISC DISPLAY=rgb_display INDEV=gt911
    - name: Build Raspberry Pi PICO port
      if: matrix.port == 'rp2'
      run: python3 make.py rp2 submodules clean mpy_cross BOARD=PICO DISPLAY=rgb_display INDEV=gt911
    - name: Build ESP32 port
      if: matrix.port == 'esp32'
      run: python3 make.py esp32 submodules clean mpy_cross BOARD=ESP32_GENERIC_S3 BOARD_VARIANT=SPIRAM_OCT DISPLAY=rgb_display INDEV=gt911
    # Unix port
    - name: Build Unix port
      if: matrix.port == 'unix'
      run: python3 make.py unix submodules clean mpy_cross DISPLAY=sdl_display INDEV=sdl_pointer

